对Warshall算法做简单改进，使得可以输出两点间的具体路径，并思考如何对所有无重边的有向图，输出所有的简单道路。但在本题中，我们只需对无重边，且无回路的有向图，求出任意一条道路即可。

采用正向表进行图的储存，图为有向图，不含重边且不含回路：
第 1 行包含空格隔开的顶点个数 v（2 <= v < 100）和边的个数 e（1 <= e < 200）。
第 2 行包含 v+1 个整数（空格隔开）p(i)（0 <= i <= v, 0 <= p(i) <= e）。
第 3 行包含 e 个整数（空格隔开）q(i)（0 <= i <= e-1, 0 <= q(i) <= v-1）。
第 4 行包含测试点对的个数 n（0 < n <= 10）。
第 5~4+n 行包含空格隔开的起始顶点 Vs(i) 和终止顶点 Ve(i)（0 <= Vs, Ve <= v-1）。

【输出格式】
输出文件包含 n 行，每行为相应测试点对的路径，如：
Vs(i)->...->Ve(i)
若结点间不存在路径，则输出 NO PATH
每行结尾都需要换行符。

例如输入：
5 6
0 2 4 5 5 6
1 2 2 3 4 3
3
0 4
3 1
0 3
____________________________
输出：
0->1->2->4
NO PATH
0->1->2->4->3
____________________________
当然，找到其他道路也可以，不仅局限于一条。
若算法实现正确，程序在一般的电脑上均应在2秒内出结果。
不限制编程语言，但尽量使用C/C++，直接在控制台输入输出，允许使用C++的 STL等工具，可写在一个文件里，最终只需提交.cpp文件，请将重命名为：学号 _姓名 .cpp即可（网络学堂批量下载学生作业后也是这么命名的）。请保证你的代码至少可以在https://glot.io/平台上运行。
有任何问题可提问，使用txt方便大家能够更清楚输入输出的格式。