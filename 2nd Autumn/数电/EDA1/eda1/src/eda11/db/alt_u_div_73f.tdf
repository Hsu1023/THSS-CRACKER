--alt_u_div DEVICE_FAMILY="Cyclone III" LPM_PIPELINE=0 MAXIMIZE_SPEED=5 SKIP_BITS=0 WIDTH_D=7 WIDTH_N=8 WIDTH_Q=8 WIDTH_R=7 denominator numerator quotient remainder
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:04:24:18:08:47:SJ cbx_lpm_abs 2013:04:24:18:08:47:SJ cbx_lpm_add_sub 2013:04:24:18:08:47:SJ cbx_lpm_divide 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ cbx_stratix 2013:04:24:18:08:47:SJ cbx_stratixii 2013:04:24:18:08:47:SJ cbx_util_mgl 2013:04:24:18:08:47:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION add_sub_unc (dataa[0..0], datab[0..0])
RETURNS ( cout, result[0..0]);
FUNCTION add_sub_vnc (dataa[1..0], datab[1..0])
RETURNS ( cout, result[1..0]);

--synthesis_resources = lut 39 
SUBDESIGN alt_u_div_73f
( 
	denominator[6..0]	:	input;
	numerator[7..0]	:	input;
	quotient[7..0]	:	output;
	remainder[6..0]	:	output;
) 
VARIABLE 
	add_sub_0 : add_sub_unc;
	add_sub_1 : add_sub_vnc;
	add_sub_2_result_int[3..0]	:	WIRE;
	add_sub_2_cout	:	WIRE;
	add_sub_2_dataa[2..0]	:	WIRE;
	add_sub_2_datab[2..0]	:	WIRE;
	add_sub_2_result[2..0]	:	WIRE;
	add_sub_3_result_int[4..0]	:	WIRE;
	add_sub_3_cout	:	WIRE;
	add_sub_3_dataa[3..0]	:	WIRE;
	add_sub_3_datab[3..0]	:	WIRE;
	add_sub_3_result[3..0]	:	WIRE;
	add_sub_4_result_int[5..0]	:	WIRE;
	add_sub_4_cout	:	WIRE;
	add_sub_4_dataa[4..0]	:	WIRE;
	add_sub_4_datab[4..0]	:	WIRE;
	add_sub_4_result[4..0]	:	WIRE;
	add_sub_5_result_int[6..0]	:	WIRE;
	add_sub_5_cout	:	WIRE;
	add_sub_5_dataa[5..0]	:	WIRE;
	add_sub_5_datab[5..0]	:	WIRE;
	add_sub_5_result[5..0]	:	WIRE;
	add_sub_6_result_int[7..0]	:	WIRE;
	add_sub_6_cout	:	WIRE;
	add_sub_6_dataa[6..0]	:	WIRE;
	add_sub_6_datab[6..0]	:	WIRE;
	add_sub_6_result[6..0]	:	WIRE;
	add_sub_7_result_int[8..0]	:	WIRE;
	add_sub_7_cout	:	WIRE;
	add_sub_7_dataa[7..0]	:	WIRE;
	add_sub_7_datab[7..0]	:	WIRE;
	add_sub_7_result[7..0]	:	WIRE;
	DenominatorIn[71..0]	: WIRE;
	DenominatorIn_tmp[71..0]	: WIRE;
	gnd_wire	: WIRE;
	nose[71..0]	: WIRE;
	NumeratorIn[71..0]	: WIRE;
	NumeratorIn_tmp[71..0]	: WIRE;
	prestg[63..0]	: WIRE;
	quotient_tmp[7..0]	: WIRE;
	sel[62..0]	: WIRE;
	selnose[71..0]	: WIRE;
	StageIn[71..0]	: WIRE;
	StageIn_tmp[71..0]	: WIRE;
	StageOut[63..0]	: WIRE;

BEGIN 
	add_sub_0.dataa[0..0] = NumeratorIn[7..7];
	add_sub_0.datab[0..0] = DenominatorIn[0..0];
	add_sub_1.dataa[] = ( StageIn[8..8], NumeratorIn[14..14]);
	add_sub_1.datab[1..0] = DenominatorIn[9..8];
	add_sub_2_result_int[] = (0, add_sub_2_dataa[]) - (0, add_sub_2_datab[]);
	add_sub_2_result[] = add_sub_2_result_int[2..0];
	add_sub_2_cout = !add_sub_2_result_int[3];
	add_sub_2_dataa[] = ( StageIn[17..16], NumeratorIn[21..21]);
	add_sub_2_datab[] = DenominatorIn[18..16];
	add_sub_3_result_int[] = (0, add_sub_3_dataa[]) - (0, add_sub_3_datab[]);
	add_sub_3_result[] = add_sub_3_result_int[3..0];
	add_sub_3_cout = !add_sub_3_result_int[4];
	add_sub_3_dataa[] = ( StageIn[26..24], NumeratorIn[28..28]);
	add_sub_3_datab[] = DenominatorIn[27..24];
	add_sub_4_result_int[] = (0, add_sub_4_dataa[]) - (0, add_sub_4_datab[]);
	add_sub_4_result[] = add_sub_4_result_int[4..0];
	add_sub_4_cout = !add_sub_4_result_int[5];
	add_sub_4_dataa[] = ( StageIn[35..32], NumeratorIn[35..35]);
	add_sub_4_datab[] = DenominatorIn[36..32];
	add_sub_5_result_int[] = (0, add_sub_5_dataa[]) - (0, add_sub_5_datab[]);
	add_sub_5_result[] = add_sub_5_result_int[5..0];
	add_sub_5_cout = !add_sub_5_result_int[6];
	add_sub_5_dataa[] = ( StageIn[44..40], NumeratorIn[42..42]);
	add_sub_5_datab[] = DenominatorIn[45..40];
	add_sub_6_result_int[] = (0, add_sub_6_dataa[]) - (0, add_sub_6_datab[]);
	add_sub_6_result[] = add_sub_6_result_int[6..0];
	add_sub_6_cout = !add_sub_6_result_int[7];
	add_sub_6_dataa[] = ( StageIn[53..48], NumeratorIn[49..49]);
	add_sub_6_datab[] = DenominatorIn[54..48];
	add_sub_7_result_int[] = (0, add_sub_7_dataa[]) - (0, add_sub_7_datab[]);
	add_sub_7_result[] = add_sub_7_result_int[7..0];
	add_sub_7_cout = !add_sub_7_result_int[8];
	add_sub_7_dataa[] = ( StageIn[62..56], NumeratorIn[56..56]);
	add_sub_7_datab[] = DenominatorIn[63..56];
	DenominatorIn[] = DenominatorIn_tmp[];
	DenominatorIn_tmp[] = ( DenominatorIn[63..0], ( gnd_wire, denominator[]));
	gnd_wire = B"0";
	nose[] = ( B"00000000", add_sub_7_cout, B"00000000", add_sub_6_cout, B"00000000", add_sub_5_cout, B"00000000", add_sub_4_cout, B"00000000", add_sub_3_cout, B"00000000", add_sub_2_cout, B"00000000", add_sub_1.cout, B"00000000", add_sub_0.cout);
	NumeratorIn[] = NumeratorIn_tmp[];
	NumeratorIn_tmp[] = ( NumeratorIn[63..0], numerator[]);
	prestg[] = ( add_sub_7_result[], GND, add_sub_6_result[], B"00", add_sub_5_result[], B"000", add_sub_4_result[], B"0000", add_sub_3_result[], B"00000", add_sub_2_result[], B"000000", add_sub_1.result[], B"0000000", add_sub_0.result[]);
	quotient[] = quotient_tmp[];
	quotient_tmp[] = ( (! selnose[0..0]), (! selnose[9..9]), (! selnose[18..18]), (! selnose[27..27]), (! selnose[36..36]), (! selnose[45..45]), (! selnose[54..54]), (! selnose[63..63]));
	remainder[6..0] = StageIn[70..64];
	sel[] = ( gnd_wire, (sel[62..62] # DenominatorIn[70..70]), (sel[61..61] # DenominatorIn[69..69]), (sel[60..60] # DenominatorIn[68..68]), (sel[59..59] # DenominatorIn[67..67]), (sel[58..58] # DenominatorIn[66..66]), (sel[57..57] # DenominatorIn[65..65]), gnd_wire, (sel[55..55] # DenominatorIn[62..62]), (sel[54..54] # DenominatorIn[61..61]), (sel[53..53] # DenominatorIn[60..60]), (sel[52..52] # DenominatorIn[59..59]), (sel[51..51] # DenominatorIn[58..58]), (sel[50..50] # DenominatorIn[57..57]), gnd_wire, (sel[48..48] # DenominatorIn[54..54]), (sel[47..47] # DenominatorIn[53..53]), (sel[46..46] # DenominatorIn[52..52]), (sel[45..45] # DenominatorIn[51..51]), (sel[44..44] # DenominatorIn[50..50]), (sel[43..43] # DenominatorIn[49..49]), gnd_wire, (sel[41..41] # DenominatorIn[46..46]), (sel[40..40] # DenominatorIn[45..45]), (sel[39..39] # DenominatorIn[44..44]), (sel[38..38] # DenominatorIn[43..43]), (sel[37..37] # DenominatorIn[42..42]), (sel[36..36] # DenominatorIn[41..41]), gnd_wire, (sel[34..34] # DenominatorIn[38..38]), (sel[33..33] # DenominatorIn[37..37]), (sel[32..32] # DenominatorIn[36..36]), (sel[31..31] # DenominatorIn[35..35]), (sel[30..30] # DenominatorIn[34..34]), (sel[29..29] # DenominatorIn[33..33]), gnd_wire, (sel[27..27] # DenominatorIn[30..30]), (sel[26..26] # DenominatorIn[29..29]), (sel[25..25] # DenominatorIn[28..28]), (sel[24..24] # DenominatorIn[27..27]), (sel[23..23] # DenominatorIn[26..26]), (sel[22..22] # DenominatorIn[25..25]), gnd_wire, (sel[20..20] # DenominatorIn[22..22]), (sel[19..19] # DenominatorIn[21..21]), (sel[18..18] # DenominatorIn[20..20]), (sel[17..17] # DenominatorIn[19..19]), (sel[16..16] # DenominatorIn[18..18]), (sel[15..15] # DenominatorIn[17..17]), gnd_wire, (sel[13..13] # DenominatorIn[14..14]), (sel[12..12] # DenominatorIn[13..13]), (sel[11..11] # DenominatorIn[12..12]), (sel[10..10] # DenominatorIn[11..11]), (sel[9..9] # DenominatorIn[10..10]), (sel[8..8] # DenominatorIn[9..9]), gnd_wire, (sel[6..6] # DenominatorIn[6..6]), (sel[5..5] # DenominatorIn[5..5]), (sel[4..4] # DenominatorIn[4..4]), (sel[3..3] # DenominatorIn[3..3]), (sel[2..2] # DenominatorIn[2..2]), (sel[1..1] # DenominatorIn[1..1]));
	selnose[] = ( (! nose[71..71]), ((! nose[70..70]) # sel[62..62]), ((! nose[69..69]) # sel[61..61]), ((! nose[68..68]) # sel[60..60]), ((! nose[67..67]) # sel[59..59]), ((! nose[66..66]) # sel[58..58]), ((! nose[65..65]) # sel[57..57]), ((! nose[64..64]) # sel[56..56]), (! nose[63..63]), ((! nose[62..62]) # sel[55..55]), ((! nose[61..61]) # sel[54..54]), ((! nose[60..60]) # sel[53..53]), ((! nose[59..59]) # sel[52..52]), ((! nose[58..58]) # sel[51..51]), ((! nose[57..57]) # sel[50..50]), ((! nose[56..56]) # sel[49..49]), (! nose[55..55]), ((! nose[54..54]) # sel[48..48]), ((! nose[53..53]) # sel[47..47]), ((! nose[52..52]) # sel[46..46]), ((! nose[51..51]) # sel[45..45]), ((! nose[50..50]) # sel[44..44]), ((! nose[49..49]) # sel[43..43]), ((! nose[48..48]) # sel[42..42]), (! nose[47..47]), ((! nose[46..46]) # sel[41..41]), ((! nose[45..45]) # sel[40..40]), ((! nose[44..44]) # sel[39..39]), ((! nose[43..43]) # sel[38..38]), ((! nose[42..42]) # sel[37..37]), ((! nose[41..41]) # sel[36..36]), ((! nose[40..40]) # sel[35..35]), (! nose[39..39]), ((! nose[38..38]) # sel[34..34]), ((! nose[37..37]) # sel[33..33]), ((! nose[36..36]) # sel[32..32]), ((! nose[35..35]) # sel[31..31]), ((! nose[34..34]) # sel[30..30]), ((! nose[33..33]) # sel[29..29]), ((! nose[32..32]) # sel[28..28]), (! nose[31..31]), ((! nose[30..30]) # sel[27..27]), ((! nose[29..29]) # sel[26..26]), ((! nose[28..28]) # sel[25..25]), ((! nose[27..27]) # sel[24..24]), ((! nose[26..26]) # sel[23..23]), ((! nose[25..25]) # sel[22..22]), ((! nose[24..24]) # sel[21..21]), (! nose[23..23]), ((! nose[22..22]) # sel[20..20]), ((! nose[21..21]) # sel[19..19]), ((! nose[20..20]) # sel[18..18]), ((! nose[19..19]) # sel[17..17]), ((! nose[18..18]) # sel[16..16]), ((! nose[17..17]) # sel[15..15]), ((! nose[16..16]) # sel[14..14]), (! nose[15..15]), ((! nose[14..14]) # sel[13..13]), ((! nose[13..13]) # sel[12..12]), ((! nose[12..12]) # sel[11..11]), ((! nose[11..11]) # sel[10..10]), ((! nose[10..10]) # sel[9..9]), ((! nose[9..9]) # sel[8..8]), ((! nose[8..8]) # sel[7..7]), (! nose[7..7]), ((! nose[6..6]) # sel[6..6]), ((! nose[5..5]) # sel[5..5]), ((! nose[4..4]) # sel[4..4]), ((! nose[3..3]) # sel[3..3]), ((! nose[2..2]) # sel[2..2]), ((! nose[1..1]) # sel[1..1]), ((! nose[0..0]) # sel[0..0]));
	StageIn[] = StageIn_tmp[];
	StageIn_tmp[] = ( StageOut[63..0], B"00000000");
	StageOut[] = ( ((( StageIn[62..56], NumeratorIn[56..56]) & selnose[63..63]) # (prestg[63..56] & (! selnose[63..63]))), ((( StageIn[54..48], NumeratorIn[49..49]) & selnose[54..54]) # (prestg[55..48] & (! selnose[54..54]))), ((( StageIn[46..40], NumeratorIn[42..42]) & selnose[45..45]) # (prestg[47..40] & (! selnose[45..45]))), ((( StageIn[38..32], NumeratorIn[35..35]) & selnose[36..36]) # (prestg[39..32] & (! selnose[36..36]))), ((( StageIn[30..24], NumeratorIn[28..28]) & selnose[27..27]) # (prestg[31..24] & (! selnose[27..27]))), ((( StageIn[22..16], NumeratorIn[21..21]) & selnose[18..18]) # (prestg[23..16] & (! selnose[18..18]))), ((( StageIn[14..8], NumeratorIn[14..14]) & selnose[9..9]) # (prestg[15..8] & (! selnose[9..9]))), ((( StageIn[6..0], NumeratorIn[7..7]) & selnose[0..0]) # (prestg[7..0] & (! selnose[0..0]))));
END;
--VALID FILE
